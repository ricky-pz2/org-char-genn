;; (defun kenku-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-human-name) (human-surname))))
;;     (setf *charname* (format ("%s %s") ((female-human-name) (human-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 160)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (human-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 58 78)))
;;   (setf *charbuild* (weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (religion-select))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (aasimar-good-or-evil))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
;; (defun lizard-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-human-name) (human-surname))))
;;     (setf *charname* (format ("%s %s") ((female-human-name) (human-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 160)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (human-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 58 78)))
;;   (setf *charbuild* (weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (religion-select))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (aasimar-good-or-evil))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
;; (defun orc-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-human-name) (human-surname))))
;;     (setf *charname* (format ("%s %s") ((female-human-name) (human-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 160)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (human-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 58 78)))
;;   (setf *charbuild* (weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (religion-select))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (aasimar-good-or-evil))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
;;
;;
;; (defun tabaxi-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-human-name) (human-surname))))
;;     (setf *charname* (format ("%s %s") ((female-human-name) (human-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 160)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (human-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 58 78)))
;;   (setf *charbuild* (weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (religion-select))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (aasimar-good-or-evil))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
;;
;;
;; (defun triton-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-human-name) (human-surname))))
;;     (setf *charname* (format ("%s %s") ((female-human-name) (human-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 160)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (human-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 58 78)))
;;   (setf *charbuild* (weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (religion-select))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (aasimar-good-or-evil))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
;;
;; (defun Trogolodyte-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-human-name) (human-surname))))
;;     (setf *charname* (format ("%s %s") ((female-human-name) (human-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 160)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (human-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 58 78)))
;;   (setf *charbuild* (weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (religion-select))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (aasimar-good-or-evil))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
;;
;; (defun goliath-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-human-name) (human-surname))))
;;     (setf *charname* (format ("%s %s") ((female-human-name) (human-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 160)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (human-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 58 78)))
;;   (setf *charbuild* (weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (religion-select))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (aasimar-good-or-evil))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
;;
;;
;; (defun goblin-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-human-name) (human-surname))))
;;     (setf *charname* (format ("%s %s") ((female-human-name) (human-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 160)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (human-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 58 78)))
;;   (setf *charbuild* (weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (religion-select))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (aasimar-good-or-evil))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
;;
;; (defun firbolg-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-elf-name) (elf-surname))))
;;     (setf *charname* (format ("%s %s") ((female-elf-name) (elf-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 500)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (firbolg-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 78 98)))
;;   (setf *charbuild* (strong-weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (elf-god))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (firbolg-quirk))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
;;
;; (defun aasimar-race
;;     (gender)
;;   (if (string-equal gender "M")
;;       (setf *charname* (format ("%s %s") ((male-human-name) (human-surname))))
;;     (setf *charname* (format ("%s %s") ((female-human-name) (human-surname))))
;;     )
;;   (setf *charage* (seq-random-elt (number-sequence 16 160)))
;;   (setf *charoccupation* (occupation))
;;   (setf *charhair* (hair))
;;   (setf *chareyes* (eye-color))
;;   (setf *charskin* ((format "%s skin" (human-skin))))
;;   (setf *charheight* (seq-random-elt (number-sequence 58 78)))
;;   (setf *charbuild* (weight))
;;   (setf *charface* ("%s %s face %s" ((face-shape)(attractiveness)(beard))))
;;   (setf *charspecial1* (special-physical-1))
;;   (setf *charspecial2* (special-physical-2))
;;   (setf *charorientation* (orientation))
;;   (setf *charrelationstatus* (relationship-status))
;;   (setf *charreligion* (religion-select))
;;   (setf *chartrait1* (random-traits-1))
;;   (setf *chartrait2* (random-traits-2))
;;   (setf *charquirk* (aasimar-good-or-evil))
;;   (setf *charhook* (hooks))
;;   (setf *charstr* (+ (d6) (d6) (d6)))
;;   (setf *chardex* (+ (d6) (d6) (d6)))
;;   (setf *charcon* (+ (d6) (d6) (d6)))
;;   (setf *charint* (+ (d6) (d6) (d6)))
;;   (setf *charwis* (+ (d6) (d6) (d6)))
;;   (setf *charcha* (+ (d6) (d6) (d6)))
;;   )
